<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_fix">
    <sys_script_fix action="INSERT_OR_UPDATE">
        <active>true</active>
        <before>false</before>
        <description>Load COVID Data from March 23, 2020 through today.</description>
        <flush_cache>false</flush_cache>
        <name>Load Old COVID Data</name>
        <record_for_rollback>false</record_for_rollback>
        <run_once>true</run_once>
        <script><![CDATA[var scheduledImportID = '52dfa881dd3810107f44f6b9a08d6221';
var startDate = new GlideDateTime('2020-03-23');

var getDataSource = function (importJob)
{
    var job = new GlideRecord('scheduled_import_set');
    job.get(importJob);
    if(job == null)
	{
		gs.error("Failed to get scheduled import: " + importJob);
	}
    var ds = job.data_source.getRefRecord();
    return ds;
};

var execScheduledImport = function (importJob)
{
    var rec = new GlideRecord('scheduled_import_set');
    rec.get(importJob);
    if(rec == null)
	{
		gs.error("Failed to get scheduled import: " + importJob);
	}
    // global
    //SncTriggerSynchronizer.executeNow(rec);
    //Scoped app
    gs.executeNow(rec);
};

// this is not good, but I'm using it for now
var wait = function(time)
{
    var t1 = new GlideDateTime().getNumericValue();
    var t2 = new GlideDateTime().getNumericValue();
    var duration = t2 - t1;
    while(duration < time){
        t2 = new GlideDateTime().getNumericValue();
        duration = t2 - t1;
    }
};

var getFileDate = function (theDate)
{
    return ("00" + theDate.getMonthUTC()).substr(-2, 2) + '-' + ("00" + theDate.getDayOfMonthUTC()).substr(-2, 2) + '-' + theDate.getYearUTC();
};

// push the date back a day since the import advances the dates first
startDate.addDaysUTC(-1);
// setting initial date to our start time.
gs.info('Setting data source to earliest date available');
var dataSource = getDataSource(scheduledImportID);
dataSource.file_path = dataSource.file_path.replace(/\/(\d{2})-(\d{2})-(\d{4})\.csv/gi, '/' + getFileDate(startDate) + '.csv');
gs.info('New file_path: ' + dataSource.file_path);
dataSource.connection_url = dataSource.connection_url.replace(/\/(\d{2})-(\d{2})-(\d{4})\.csv/gi, '/' + getFileDate(startDate) + '.csv');
dataSource.update();

gs.info('Sart firing the loads for each day until now');
// loop through all the days
while(startDate.compareTo(new GlideDateTime()) == -1)
{
    gs.info('Executing Scheduled Import for: ' + startDate.toString());
    execScheduledImport(scheduledImportID);
    startDate.addDaysUTC(1);
    wait(10 * 1000); // give the jobs time to update before firing the next one
}]]></script>
        <sys_class_name>sys_script_fix</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-05-13 20:08:17</sys_created_on>
        <sys_id>d261b8c1dd3810107f44f6b9a08d62ef</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Load Old COVID Data</sys_name>
        <sys_package display_value="External Covid Data" source="x_snc_ecd">80379045ddf410107f44f6b9a08d6270</sys_package>
        <sys_policy/>
        <sys_scope display_value="External Covid Data">80379045ddf410107f44f6b9a08d6270</sys_scope>
        <sys_update_name>sys_script_fix_d261b8c1dd3810107f44f6b9a08d62ef</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-13 20:08:47</sys_updated_on>
        <unloadable>false</unloadable>
    </sys_script_fix>
</record_update>
